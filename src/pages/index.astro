---
import Layout from '../layouts/Layout.astro';
import '../styles/index.css';
---
<Layout title="F1 Time 🏎️">
    <h1 class="text-center text-5xl font-extrabold text-white mb-12">Bienvenido a F1 Time 🏎️</h1>
    <main class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8 min-h-screen bg-gray-800 text-white px-4 py-10 place-items-center">
        <!-- Botones -->
        <a href="/circuitos" class="menu-button bg-gradient-to-r from-blue-500 to-blue-700 text-white py-6 px-8 rounded-xl text-center shadow-xl hover:scale-105 hover:bg-blue-800 transition-all ease-in-out duration-300 transform hover:shadow-2xl w-full max-w-xs">
            Circuitos
        </a>
        <a href="/pilotos" class="menu-button bg-gradient-to-r from-red-500 to-red-700 text-white py-6 px-8 rounded-xl text-center shadow-xl hover:scale-105 hover:bg-red-800 transition-all ease-in-out duration-300 transform hover:shadow-2xl w-full max-w-xs">
            Pilotos
        </a>
        <a href="/escuderias" class="menu-button bg-gradient-to-r from-green-500 to-green-700 text-white py-6 px-8 rounded-xl text-center shadow-xl hover:scale-105 hover:bg-green-800 transition-all ease-in-out duration-300 transform hover:shadow-2xl w-full max-w-xs">
            Escuderías
        </a>
        <a href="/puntos" class="menu-button bg-gradient-to-r from-yellow-500 to-yellow-700 text-white py-6 px-8 rounded-xl text-center shadow-xl hover:scale-105 hover:bg-yellow-800 transition-all ease-in-out duration-300 transform hover:shadow-2xl w-full max-w-xs">
            Puntos
        </a>
    </main>
    
<!-- Audio de fondo -->
<audio id="background-audio" src="/musica/Intro.mp3" preload="auto" loop></audio>
<div class="audio-controls">
    <button id="play-audio" class="audio-button">▶️ Intro </button>
    <button id="audio-toggle" class="audio-button" style="display: none;">
        <span id="audio-icon">🔊</span>
    </button>
</div>

<script>
    // Añadir comprobación de tipos y null checks
    const audio = document.getElementById('background-audio') as HTMLAudioElement;
    const playButton = document.getElementById('play-audio') as HTMLButtonElement;
    const toggleButton = document.getElementById('audio-toggle') as HTMLButtonElement;
    const audioIcon = document.getElementById('audio-icon') as HTMLSpanElement;

    if (audio && playButton && toggleButton && audioIcon) {
        // Establecer el volumen inicial bajo
        audio.volume = 0.1; 

        // Reproducir el audio al hacer clic en el botón "Iniciar Audio"
        playButton.addEventListener('click', () => {
            audio.play().then(() => {
                playButton.style.display = 'none';
                toggleButton.style.display = 'inline-block';
            }).catch((error) => {
                console.log('Error al reproducir el audio:', error);
            });
        });

        // Controlar el botón de silenciar
        toggleButton.addEventListener('click', () => {
            if (audio.muted) {
                audio.muted = false;
                audioIcon.textContent = '🔊';
            } else {
                audio.muted = true;
                audioIcon.textContent = '🔇';
            }
        });
    }

    // Interceptar clics en los enlaces y recargar antes de redirigir
    const menuButtons = document.querySelectorAll('.menu-button');
    menuButtons.forEach((button) => {
        button.addEventListener('click', (event) => {
            event.preventDefault(); // Prevenir la navegación inmediata
            const href = button.getAttribute('href'); // Obtener el destino
            if (href) {
                window.location.href = href; // Redirigir después de recargar
            }
        });
    });
</script>
</Layout>