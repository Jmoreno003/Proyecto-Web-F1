---
// filepath: c:\Users\byjos\Documents\Cursos\Astro5\Web-F1\src\pages\circuitos.astro
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import '../styles/circuitos.css';
import background from '../assets/fondopilotos.jpg';

const circuitos = (await getCollection("circuitos")).sort((a, b) => a.data.Orden - b.data.Orden);
const { idcircuitos } = Astro.params;
---

<Layout title="F1 Time üèéÔ∏è">
    <img id="background" src={background.src} alt="" fetchpriority="high" />
    <header class="header">
        <div class="title-container">
            <h1>Circuitos</h1>
        </div>

        <!-- Bot√≥n de men√∫ -->
        <button id="menu-icon">‚ò∞</button>

        <!-- Contenedor de botones -->
        <div id="menu-items" class="buttons-container">
            <a href="/circuitos" class="menu-button">Circuitos</a>
            <a href="/pilotos" class="menu-button">Pilotos</a>
            <a href="/escuderias" class="menu-button">Escuder√≠as</a>
            <a href="/puntos" class="menu-button">Puntos</a>
        </div>
    </header>
    <main>
        <div class="circuitos">
            {
                circuitos.map(circuito => {
                    const { id, data } = circuito;
                    const { Imagen, Titulo, Orden } = data;

                    return (
                        <a href={`/circuitos/${id}`} class="circuito-card" data-id={id}>
                            <img
                                src={Imagen}
                                alt={Titulo}
                                class="circuito-image"
                            />
                        </a>
                    );
                })
            }
        </div>
        
        <!-- Circuitos destacados -->
        <div class="circuitos-mostrar">
            {
                circuitos.map(circuito => {
                    const { id, data } = circuito;
                    const { Imagen, Titulo } = data;

                    return (
                        <a href={`/circuitos/${id}`} class="circuito-big-card" data-id={`circuito-big-${id}`}>
                            <img 
                                src={Imagen} 
                                alt={`${Titulo}`} 
                                loading="lazy" 
                                class="circuito-image" 
                                decoding="async" 
                            />
                            <div class="circuito-info">
                                <h2 class="circuito-title">{Titulo}</h2>
                            </div>
                        </a>
                    );
                })
            }
        </div>
    </main>

    <script>
        // Forzar recarga completa al entrar en la p√°gina, incluso al usar "Atr√°s"
        window.addEventListener('pageshow', (event) => {
            if (event.persisted) {
                window.location.reload();
            }
        });

        // Inicializar el comportamiento del men√∫
        function initializeMenu() {
            const menuIcon = document.getElementById('menu-icon');
            const menuItems = document.getElementById('menu-items');

            if (menuIcon && menuItems) {
                menuIcon.addEventListener('click', () => {
                    // Alternar la visibilidad del men√∫
                    menuItems.style.display = menuItems.style.display === 'flex' ? 'none' : 'flex';
                });
            }
        }

        // Ejecutar la funci√≥n al cargar la p√°gina
        document.addEventListener('DOMContentLoaded', initializeMenu);

        // Interceptar clics en los enlaces y recargar antes de redirigir
        const menuButtons = document.querySelectorAll('.menu-button');
        menuButtons.forEach((button) => {
            button.addEventListener('click', (event) => {
                event.preventDefault(); // Prevenir la navegaci√≥n inmediata
                const href = button.getAttribute('href'); // Obtener el destino
                if (href) {
                    window.location.href = href; // Redirigir despu√©s de recargar
                }
            });
        });

        // Inicializar el comportamiento de los circuitos
        function initializeCircuitos() {
            const circuitoCards = document.querySelectorAll('.circuito-card');
            const bigCircuitos = document.querySelectorAll('.circuito-big-card');

            // Asegurar que todos los circuitos grandes est√©n ocultos al inicio
            bigCircuitos.forEach(circuito => circuito.classList.add('hidden'));

            // Declarar la variable currentCircuitoId
            let currentCircuitoId = null;

            circuitoCards.forEach((singleCircuitoCard) => {
                singleCircuitoCard.addEventListener('mouseenter', () => {
                    const id = singleCircuitoCard.getAttribute('data-id');

                    if (id) {
                        const event = new CustomEvent("circuito-hovered", { detail: { id } });
                        document.dispatchEvent(event);
                    }
                });
            });

            document.addEventListener("circuito-hovered", (event) => {
                const customEvent = event as CustomEvent<{ id: string }>;
                const id = customEvent.detail.id;

                if (currentCircuitoId === id) return;

                // Ocultar todos los circuitos antes de mostrar el nuevo
                bigCircuitos.forEach(circuito => circuito.classList.add('hidden'));

                // Mostrar solo el circuito correspondiente
                document.querySelector(`[data-id="circuito-big-${id}"]`)?.classList.remove('hidden');

                currentCircuitoId = id;
            });

            // Reseteamos el estado al volver atr√°s
            window.addEventListener("popstate", () => {
                bigCircuitos.forEach(circuito => circuito.classList.add('hidden'));
                currentCircuitoId = null;
            });
        }

        document.addEventListener('DOMContentLoaded', initializeCircuitos);
    </script>
</Layout>